const { cmd, commands } = require("../command");
const yts = require("yt-search");
const { ytmp3 } = require("@vreden/youtube_scraper");

cmd(
  {
    pattern: "song",
    react: "üé∂",
    desc: "‡∑É‡∑í‡∂±‡∑ä‡∂Ø‡∑î Download ",
    category: "download",
    filename: __filename,
  },
  async (
    saduni,
    mek,
    m,
    {
      from,
      quoted,
      body,
      isCmd,
      command,
      args,
      q,
      isGroup,
      sender,
      senderNumber,
      botNumber2,
      botNumber,
      pushname,
      isMe,
      isOwner,
      groupMetadata,
      groupName,
      participants,
      groupAdmins,
      isBotAdmins,
      isAdmins,
      reply,
    }
  ) => {
    try {
      if (!q) return reply("‚ùå *‡∑É‡∑í‡∂±‡∑ä‡∂Ø‡∑î‡∑Ä‡∑ô ‡∂±‡∂∏ ‡∑Ñ‡∂ª‡∑í Link ‡∂ë‡∂ö ‡∑Ñ‡∂ª‡∑í ‡∂Ø‡∑è‡∂Ω Sharch ‡∂ö‡∂ª‡∂±‡∑ä‡∂±*");

      const search = await yts(q);
      const data = search.videos[0];
      const url = data.url;

      let desc = `
‡∑É‡∑í‡∂±‡∑ä‡∂Ø‡∑î downloader
üé¨ *Title:* ${data.title}
‚è±Ô∏è *Duration:* ${data.timestamp}
üìÖ *Uploaded:* ${data.ago}
üëÄ *Views:* ${data.views.toLocaleString()}
üîó *Watch Here:* ${data.url}
`;

      await saduni.sendMessage(
        from,
        { image: { url: data.thumbnail }, caption: desc },
        { quoted: mek }
      );

      const quality = "192";
      const songData = await ytmp3(url, quality);

      let durationParts = data.timestamp.split(":").map(Number);
      let totalSeconds =
        durationParts.length === 3
          ? durationParts[0] * 3600 + durationParts[1] * 60 + durationParts[2]
          : durationParts[0] * 60 + durationParts[1];

      if (totalSeconds > 1800) {
        return reply("‚è≥ *‡∂∏‡∑ö‡∂ö ‡∑Ä‡∑í‡∂±‡∑è‡∂©‡∑í 30 ‡∑Ä‡∂©‡∑è ‡∑Ä‡∑ê‡∂©‡∑í ‡∂∂‡∑ä‡∂±‡∑ä .*");
      }

      await saduni.sendMessage(
        from,
        {
          audio: { url: songData.download.url },
          mimetype: "audio/mpeg",
        },
        { quoted: mek }
      );

      await saduni.sendMessage(
        from,
        {
          document: { url: songData.download.url },
          mimetype: "audio/mpeg",
          fileName: `${data.title}.mp3`,
          caption: "üé∂ *‡∑É‡∑í‡∂±‡∑ä‡∂Ø‡∑î‡∑Ä ‡∑Ñ‡∂ª‡∑í ‡∂ö‡∑ú‡∂Ω‡∑ä‡∂Ω‡∑ú!*",
        },
        { quoted: mek }
      );

      return reply("‚úÖ Thank you");
    } catch (e) {
      console.log(e);
      reply(`‚ùå *Error:* ${e.message} üòû`);
    }
  }
);
